#!/bin/bash
# usage: bin/compile <build-dir> <cache-dir> <env-dir>

set -eo pipefail

mkdir -p "$1" "$2" "$3"

BUILD_DIR=$(cd "$1/" && pwd)
CACHE_DIR=$(cd "$2/" && pwd)
ENV_DIR=$(cd "$3/" && pwd)
BUILDPACK_DIR=$(dirname $(dirname $0))
OLDHOME="$HOME"

mkdir -p $BUILD_DIR/bin $CACHE_DIR/bin $BUILD_DIR/.profile.d $CACHE_DIR/.profile.d

PATH="$PATH:$BUILD_DIR/bin"

if ! test -d $CACHE_DIR/google-cloud-sdk ; then
  export CLOUDSDK_CORE_DISABLE_PROMPTS=1
  export CLOUDSDK_INSTALL_DIR=$CACHE_DIR
  export CLOUDSDK_ROOT_DIR=$CACHE_DIR
  export HOME="$CACHE_DIR"
  curl -sL https://dl.google.com/dl/cloudsdk/release/install_google_cloud_sdk.bash | bash

  if test -f $ENV_DIR/GCLOUD_PROJECT ; then
    export GCLOUD_PROJECT="$(cat $ENV_DIR/GCLOUD_PROJECT)"
  fi

  if test -f $ENV_DIR/GCLOUD_OAUTH_TOKEN ; then
    export GCLOUD_OAUTH_TOKEN="$(cat $ENV_DIR/GCLOUD_OAUTH_TOKEN)"
  fi

  PATH="$CACHE_DIR/google-cloud-sdk/bin:$PATH"

  echo "${GCLOUD_OAUTH_TOKEN}" | gcloud auth login \
    --project "${GCLOUD_PROJECT}" \
    -q \
    --no-launch-browser

  cp -v $CACHE_DIR/google-cloud-sdk/path.bash.inc $CACHE_DIR/.profile.d/gcloud.sh

  export HOME="$OLDHOME"
fi

if ! test -f $CACHE_DIR/bin/jq ; then
  curl -sSL -o $CACHE_DIR/bin/jq \
    https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64
fi

if ! test -f $CACHE_DIR/.profile.d/homebin.sh ; then
  echo 'PATH=$PATH:$HOME/bin' > $CACHE_DIR/.profile.d/homebin.sh
fi

rsync -avz $CACHE_DIR/ $BUILD_DIR/
