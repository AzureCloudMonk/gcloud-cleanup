#!/usr/bin/env bash

HERE="$(dirname ${BASH_SOURCE[0]})"
PATH="$HERE/google-cloud-sdk/bin:$PATH"

: ${GCLOUD_ZONE:=us-central1-f}
: ${GCLOUD_VERBOSITY:=info}
: ${GCLOUD_LOG_HTTP:=true}
: ${GCLOUD_CLEANUP_LOOP_SLEEP:=10}

cat <<EOF
Starting up gcloud-cleanup with settings:

  GCLOUD_PROJECT=${GCLOUD_PROJECT}
  GCLOUD_ZONE=${GCLOUD_ZONE}
  GCLOUD_VERBOSITY=${GCLOUD_VERBOSITY}
  GCLOUD_LOG_HTTP=${GCLOUD_LOG_HTTP}
  GCLOUD_CLEANUP_LOOP_SLEEP=${GCLOUD_CLEANUP_LOOP_SLEEP}

EOF

echo -en "Active account: "
gcloud auth list --format json | jq -r .active_account

log() {
  msg=$1
  shift
  echo date=$(date -u +%Y-%m-%dT%H:%M:%S) level=info msg=\"$msg\" $*
}

while true ; do
  TERMINST_TMP=$(mktemp ${TMPDIR:-/var/tmp}/gcloud-cleanup.XXXXX)

  log 'fetching terminated instances'

  gcloud compute instances list --format json | \
    jq -r '.[] | select(.status == "TERMINATED") | .name' > ${TERMINST_TMP}

  if [[ -s ${TERMINST_TMP} ]] ; then
    cat ${TERMINST_TMP} | \
      xargs gcloud compute instances delete \
        --zone ${GCLOUD_ZONE} \
        --verbosity ${GCLOUD_VERBOSITY} \
        -q \
        --log-http ${GCLOUD_LOG_HTTP}
    log 'deleted instances' n=$(wc -l ${TERMINST_TMP} | awk '{ print $1 }')
  else
    log 'nothing to clean up, skipping'
  fi

  rm -f ${TERMINST_TMP}

  log 'sleeping' seconds=${GCLOUD_CLEANUP_LOOP_SLEEP}

  sleep ${GCLOUD_CLEANUP_LOOP_SLEEP}
done
